use winit::{window::CursorIcon, event::{VirtualKeyCode, MouseButton}};
use dear_imgui_sys::*;

pub fn to_imgui_button(btncode: MouseButton) -> Option<ImGuiMouseButton_> {
    let btn = match btncode {
        MouseButton::Left => ImGuiMouseButton_::ImGuiMouseButton_Left,
        MouseButton::Right => ImGuiMouseButton_::ImGuiMouseButton_Right,
        MouseButton::Middle => ImGuiMouseButton_::ImGuiMouseButton_Middle,
        MouseButton::Other(x) if x < ImGuiMouseButton_::ImGuiMouseButton_COUNT.0 as u16 => ImGuiMouseButton_(x as _),
        _ => return None,
    };
    Some(btn)
}
pub fn to_imgui_key(keycode: VirtualKeyCode) -> Option<ImGuiKey> {
    let key = match keycode {
        VirtualKeyCode::Tab => ImGuiKey::ImGuiKey_Tab,
        VirtualKeyCode::Left => ImGuiKey::ImGuiKey_LeftArrow,
        VirtualKeyCode::Right => ImGuiKey::ImGuiKey_RightArrow,
        VirtualKeyCode::Up => ImGuiKey::ImGuiKey_UpArrow,
        VirtualKeyCode::Down => ImGuiKey::ImGuiKey_DownArrow,
        VirtualKeyCode::PageUp => ImGuiKey::ImGuiKey_PageUp,
        VirtualKeyCode::PageDown => ImGuiKey::ImGuiKey_PageDown,
        VirtualKeyCode::Home => ImGuiKey::ImGuiKey_Home,
        VirtualKeyCode::End => ImGuiKey::ImGuiKey_End,
        VirtualKeyCode::Insert => ImGuiKey::ImGuiKey_Insert,
        VirtualKeyCode::Delete => ImGuiKey::ImGuiKey_Delete,
        VirtualKeyCode::Back => ImGuiKey::ImGuiKey_Backspace,
        VirtualKeyCode::Space => ImGuiKey::ImGuiKey_Space,
        VirtualKeyCode::Return => ImGuiKey::ImGuiKey_Enter,
        VirtualKeyCode::Escape => ImGuiKey::ImGuiKey_Escape,
        VirtualKeyCode::LControl => ImGuiKey::ImGuiKey_LeftCtrl,
        VirtualKeyCode::LShift => ImGuiKey::ImGuiKey_LeftShift,
        VirtualKeyCode::LAlt => ImGuiKey::ImGuiKey_LeftAlt,
        VirtualKeyCode::LWin => ImGuiKey::ImGuiKey_LeftSuper,
        VirtualKeyCode::RControl => ImGuiKey::ImGuiKey_RightCtrl,
        VirtualKeyCode::RShift => ImGuiKey::ImGuiKey_RightShift,
        VirtualKeyCode::RAlt => ImGuiKey::ImGuiKey_RightAlt,
        VirtualKeyCode::RWin => ImGuiKey::ImGuiKey_RightSuper,
        VirtualKeyCode::Key0 => ImGuiKey::ImGuiKey_0,
        VirtualKeyCode::Key1 => ImGuiKey::ImGuiKey_1,
        VirtualKeyCode::Key2 => ImGuiKey::ImGuiKey_2,
        VirtualKeyCode::Key3 => ImGuiKey::ImGuiKey_3,
        VirtualKeyCode::Key4 => ImGuiKey::ImGuiKey_4,
        VirtualKeyCode::Key5 => ImGuiKey::ImGuiKey_5,
        VirtualKeyCode::Key6 => ImGuiKey::ImGuiKey_6,
        VirtualKeyCode::Key7 => ImGuiKey::ImGuiKey_7,
        VirtualKeyCode::Key8 => ImGuiKey::ImGuiKey_8,
        VirtualKeyCode::Key9 => ImGuiKey::ImGuiKey_9,
        VirtualKeyCode::A => ImGuiKey::ImGuiKey_A,
        VirtualKeyCode::B => ImGuiKey::ImGuiKey_B,
        VirtualKeyCode::C => ImGuiKey::ImGuiKey_C,
        VirtualKeyCode::D => ImGuiKey::ImGuiKey_D,
        VirtualKeyCode::E => ImGuiKey::ImGuiKey_E,
        VirtualKeyCode::F => ImGuiKey::ImGuiKey_F,
        VirtualKeyCode::G => ImGuiKey::ImGuiKey_G,
        VirtualKeyCode::H => ImGuiKey::ImGuiKey_H,
        VirtualKeyCode::I => ImGuiKey::ImGuiKey_I,
        VirtualKeyCode::J => ImGuiKey::ImGuiKey_J,
        VirtualKeyCode::K => ImGuiKey::ImGuiKey_K,
        VirtualKeyCode::L => ImGuiKey::ImGuiKey_L,
        VirtualKeyCode::M => ImGuiKey::ImGuiKey_M,
        VirtualKeyCode::N => ImGuiKey::ImGuiKey_N,
        VirtualKeyCode::O => ImGuiKey::ImGuiKey_O,
        VirtualKeyCode::P => ImGuiKey::ImGuiKey_P,
        VirtualKeyCode::Q => ImGuiKey::ImGuiKey_Q,
        VirtualKeyCode::R => ImGuiKey::ImGuiKey_R,
        VirtualKeyCode::S => ImGuiKey::ImGuiKey_S,
        VirtualKeyCode::T => ImGuiKey::ImGuiKey_T,
        VirtualKeyCode::U => ImGuiKey::ImGuiKey_U,
        VirtualKeyCode::V => ImGuiKey::ImGuiKey_V,
        VirtualKeyCode::W => ImGuiKey::ImGuiKey_W,
        VirtualKeyCode::X => ImGuiKey::ImGuiKey_X,
        VirtualKeyCode::Y => ImGuiKey::ImGuiKey_Y,
        VirtualKeyCode::Z => ImGuiKey::ImGuiKey_Z,
        VirtualKeyCode::F1 => ImGuiKey::ImGuiKey_F1,
        VirtualKeyCode::F2 => ImGuiKey::ImGuiKey_F2,
        VirtualKeyCode::F3 => ImGuiKey::ImGuiKey_F3,
        VirtualKeyCode::F4 => ImGuiKey::ImGuiKey_F4,
        VirtualKeyCode::F5 => ImGuiKey::ImGuiKey_F5,
        VirtualKeyCode::F6 => ImGuiKey::ImGuiKey_F6,
        VirtualKeyCode::F7 => ImGuiKey::ImGuiKey_F7,
        VirtualKeyCode::F8 => ImGuiKey::ImGuiKey_F8,
        VirtualKeyCode::F9 => ImGuiKey::ImGuiKey_F9,
        VirtualKeyCode::F10 => ImGuiKey::ImGuiKey_F10,
        VirtualKeyCode::F11 => ImGuiKey::ImGuiKey_F11,
        VirtualKeyCode::F12 => ImGuiKey::ImGuiKey_F12,
        VirtualKeyCode::Apostrophe => ImGuiKey::ImGuiKey_Apostrophe,
        VirtualKeyCode::Comma => ImGuiKey::ImGuiKey_Comma,
        VirtualKeyCode::Minus => ImGuiKey::ImGuiKey_Minus,
        VirtualKeyCode::Period => ImGuiKey::ImGuiKey_Period,
        VirtualKeyCode::Slash => ImGuiKey::ImGuiKey_Slash,
        VirtualKeyCode::Semicolon => ImGuiKey::ImGuiKey_Semicolon,
        VirtualKeyCode::Equals => ImGuiKey::ImGuiKey_Equal,
        VirtualKeyCode::LBracket => ImGuiKey::ImGuiKey_LeftBracket,
        VirtualKeyCode::Backslash => ImGuiKey::ImGuiKey_Backslash,
        VirtualKeyCode::RBracket => ImGuiKey::ImGuiKey_RightBracket,
        VirtualKeyCode::Grave => ImGuiKey::ImGuiKey_GraveAccent,
        VirtualKeyCode::Capital => ImGuiKey::ImGuiKey_CapsLock,
        VirtualKeyCode::Scroll => ImGuiKey::ImGuiKey_ScrollLock,
        VirtualKeyCode::Numlock => ImGuiKey::ImGuiKey_NumLock,
        VirtualKeyCode::Snapshot => ImGuiKey::ImGuiKey_PrintScreen,
        VirtualKeyCode::Pause => ImGuiKey::ImGuiKey_Pause,
        VirtualKeyCode::Numpad0 => ImGuiKey::ImGuiKey_Keypad0,
        VirtualKeyCode::Numpad1 => ImGuiKey::ImGuiKey_Keypad1,
        VirtualKeyCode::Numpad2 => ImGuiKey::ImGuiKey_Keypad2,
        VirtualKeyCode::Numpad3 => ImGuiKey::ImGuiKey_Keypad3,
        VirtualKeyCode::Numpad4 => ImGuiKey::ImGuiKey_Keypad4,
        VirtualKeyCode::Numpad5 => ImGuiKey::ImGuiKey_Keypad5,
        VirtualKeyCode::Numpad6 => ImGuiKey::ImGuiKey_Keypad6,
        VirtualKeyCode::Numpad7 => ImGuiKey::ImGuiKey_Keypad7,
        VirtualKeyCode::Numpad8 => ImGuiKey::ImGuiKey_Keypad8,
        VirtualKeyCode::Numpad9 => ImGuiKey::ImGuiKey_Keypad9,
        VirtualKeyCode::NumpadDecimal => ImGuiKey::ImGuiKey_KeypadDecimal,
        VirtualKeyCode::NumpadDivide => ImGuiKey::ImGuiKey_KeypadDivide,
        VirtualKeyCode::NumpadMultiply => ImGuiKey::ImGuiKey_KeypadMultiply,
        VirtualKeyCode::NumpadSubtract => ImGuiKey::ImGuiKey_KeypadSubtract,
        VirtualKeyCode::NumpadAdd => ImGuiKey::ImGuiKey_KeypadAdd,
        VirtualKeyCode::NumpadEnter => ImGuiKey::ImGuiKey_KeypadEnter,
        VirtualKeyCode::NumpadEquals => ImGuiKey::ImGuiKey_KeypadEqual,
        _ => return None,
    };
    Some(key)
}

pub fn from_imgui_cursor(cursor: ImGuiMouseCursor_) -> CursorIcon {
    #![allow(non_upper_case_globals)]
    use CursorIcon::*;
    match cursor {
        ImGuiMouseCursor_::ImGuiMouseCursor_Arrow => Arrow,
        ImGuiMouseCursor_::ImGuiMouseCursor_TextInput => Text,
        ImGuiMouseCursor_::ImGuiMouseCursor_ResizeAll => Move,
        ImGuiMouseCursor_::ImGuiMouseCursor_ResizeNS => NsResize,
        ImGuiMouseCursor_::ImGuiMouseCursor_ResizeEW => EwResize,
        ImGuiMouseCursor_::ImGuiMouseCursor_ResizeNESW => NeswResize,
        ImGuiMouseCursor_::ImGuiMouseCursor_ResizeNWSE => NwseResize,
        ImGuiMouseCursor_::ImGuiMouseCursor_Hand => Hand,
        ImGuiMouseCursor_::ImGuiMouseCursor_NotAllowed => NotAllowed,
        _ => CursorIcon::Default,
    }
}

